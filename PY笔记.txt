PY笔记 
快捷键：
    01 编辑
        编辑是编程的基本操作，VSCode 提供了一些快捷键来快速插入、删除、复制、移动、选择和格式化代码。
        功能	快捷键
        插入行	Ctrl+Enter（下方）
                Ctrl+Shift+Enter（上方）
        删除行	Ctrl+Shift+K
        复制行	Ctrl+C（未选中时）
        Alt+Shift+↑（向上）
        Alt+Shift+↓（向下）
        移动行	Alt+↑（向上）
        Alt+↓（向下）
        选择行	Ctrl+L
        选择单词	Ctrl+D
        选择所有匹配项	Ctrl+Shift+L
        选择括号内内容	Shift+Alt+(
        选择代码块	Shift+Alt+→（向右）
        Shift+Alt+←（向左）
        格式化代码	Alt+Shift+F
    02 导航
        导航是编程的常用操作，VSCode 提供了一些快捷键来快速跳转、搜索、替换和查看代码。

        功能	快捷键
        跳转到文件	Ctrl+P
        跳转到符号	Ctrl+Shift+O
        跳转到定义	F12
        跳转到实现	Ctrl+F12
        跳转到引用	Shift+F12
        跳转到上一个位置	Alt+←
        跳转到下一个位置	Alt+→
        搜索	Ctrl+F
        替换	Ctrl+H
        查看大纲	Ctrl+Shift+O
        查看问题	Ctrl+Shift+M
        查看终端	Ctrl+`
    03 调试
        调试是编程的重要环节，VSCode 提供了一些快捷键来快速启动、停止、暂停、继续、步入、步出和步过代码。

        功能	快捷键
        启动调试	F5
        停止调试	Shift+F5
        暂停调试	F6
        继续调试	F5
        步入	F11
        步出	Shift+F11
        步过	F10
    04 其他
        除了上述的功能，VSCode 还提供了一些其他的快捷键来快速执行一些常用的操作，如注释、折叠、展开、切换、重命名等。

        功能	快捷键
        注释	Ctrl+/（单行）（多行）
        折叠	Ctrl+Shift+[
        展开	Ctrl+Shift+]
        切换全屏	F11
        切换侧边栏	Ctrl+B
        切换编辑器	Ctrl+Tab
        切换分屏	Ctrl+1~9
        重命名	F2
        保存	Ctrl+S
        撤销	Ctrl+Z
        重做	Ctrl+Y
    05 重构
        重构是编程的常用操作，它可以用来改善代码的结构和质量，提高代码的可读性和可维护性。
        VSCode 提供了一些快捷键来快速执行一些常用的重构操作，如提取、内联、移动、重命名等。

        功能	快捷键
        提取变量	Ctrl+Shift+R，选择Extract to variable
        提取函数	Ctrl+Shift+R，选择Extract to function
        内联变量	Ctrl+Shift+R，选择Inline variable
        内联函数	Ctrl+Shift+R，选择Inline function
        移动文件	Ctrl+Shift+R，选择Move file to...
        重命名符号	F2
    06 测试
        测试是编程的重要环节，它可以用来验证代码的正确性和性能，发现和修复代码的错误和缺陷。
        VSCode 提供了一些快捷键来快速执行一些常用的测试操作，如运行、调试、跳转、查看等。

        功能	快捷键
        运行测试	Ctrl+Shift+P，输入Test: Run Test at Cursor
        调试测试	Ctrl+Shift+P，输入Test: Debug Test at Cursor
        跳转到测试	Ctrl+Shift+P，输入Test: Peek Output
        查看测试结果	Ctrl+Shift+P，输入Test: Show Test Output
    07 扩展
        扩展是 VSCode 的强大功能，它可以用来增加 VSCode 的功能和特性，让你可以根据自己的需要和喜好来定制 VSCode 的界面和行为。
        VSCode 提供了一些快捷键来快速执行一些常用的扩展操作，如安装、卸载、启用、禁用、更新等。

        功能	快捷键
        安装扩展	Ctrl+Shift+X
        卸载扩展	Ctrl+Shift+P，输入Extensions: Uninstall Extension
        启用扩展	Ctrl+Shift+P，输入Extensions: Enable Extension
        禁用扩展	Ctrl+Shift+P，输入Extensions: Disable Extension
        更新扩展	Ctrl+Shift+P，输入Extensions: Update All Extensions
    08 选择
        选择是编程的常用操作，它可以用来快速选中代码的部分或全部，以便进行复制、删除、移动、替换等操作。
        VSCode 提供了一些快捷键来快速执行一些常用的选择操作，如选择单词、选择行、选择列、选择范围等。

        功能	快捷键
        选择单词	Ctrl+D
        选择行	Ctrl+L
        选择列	Shift+Alt+→（向右）
        Shift+Alt+←（向左）
        选择范围	Shift+Alt+鼠标左键
        选择所有匹配项	Ctrl+Shift+L
    09 搜索
        搜索是编程的常用操作，它可以用来快速查找代码中的某个单词或字符串，以便进行修改、替换、跳转等操作。
        VSCode 提供了一些快捷键来快速执行一些常用的搜索操作，如搜索当前文件、搜索工作区、搜索符号、搜索编辑器等。

        功能	快捷键
        搜索当前文件	Ctrl+F
        搜索工作区	Ctrl+Shift+F
        搜索符号	Ctrl+T
        搜索编辑器	Ctrl+P
    10 书签
        书签是编程的常用功能，它可以用来快速标记和跳转到代码中的某个位置，以便进行查看、修改、对比等操作。
        VSCode 提供了一些快捷键来快速执行一些常用的书签操作，如添加书签、删除书签、跳转书签等。

        功能	快捷键
        添加书签	Ctrl+Alt+K
        删除书签	Ctrl+Alt+L
        跳转书签	Ctrl+Alt+J（向下）
        Ctrl+Alt+H（向上）
    11 多光标
        多光标是 VSCode 的强大功能，它可以让你在多个位置同时进行编辑，以便进行批量修改、插入、删除等操作。
        VSCode 提供了一些快捷键来快速执行一些常用的多光标操作，如添加多光标、删除多光标、选择多光标等。

        功能	快捷键
        添加多光标	Ctrl+Alt+↑（向上）
                   Ctrl+Alt+↓（向下）
                   Ctrl+鼠标左键（任意位置）
        删除多光标	Esc
        选择多光标	Ctrl+Shift+L（所有匹配项）
                   Ctrl+Alt+Shift+↑（向上）
                   Ctrl+Alt+Shift+↓（向下）
    12 代码片段
        代码片段是 VSCode 的实用功能，它可以让你快速插入一些常用的代码模板，以便节省编写时间和提高编码质量。
        VSCode 提供了一些快捷键来快速执行一些常用的代码片段操作，如插入代码片段、创建代码片段、管理代码片段等。

        功能	快捷键
        插入代码片段	Ctrl+Space
        创建代码片段	Ctrl+Shift+P，输入Preferences: Configure User Snippets
        管理代码片段	Ctrl+Shift+P，输入Preferences: Open User Snippets
    13 其他
        除了上述的功能，VSCode 还提供了一些其他的快捷键来快速执行一些常用的操作，如撤销、重做、保存、关闭、切换、缩放等。

        功能	快捷键
        撤销	Ctrl+Z
        重做	Ctrl+Y
        保存	Ctrl+S
        关闭	Ctrl+W
        切换	Ctrl+Tab
        缩放	Ctrl+=（放大）
        Ctrl+-（缩小）

2.
    2.变量名
        1 变量名只能包含字母、数字和下划线。变量名能以字母或下划线打头，但不能以数字打头。例如，可将变量命名为message_1 ，但不能将其命名为1_message 。
        2 变量名不能包含空格，但能使用下划线来分隔其中的单词。例如，变量名greeting_message 可行，但变量名greeting message 会引发错误。
        3 不要将Python关键字和函数名用作变量名，即不要使用Python保留用于特殊用途的单词，如print （请参见附录A.4）。
        4 变量名应既简短又具有描述性。例如，name 比n好，student_name 比s_n 好，name_length 比 length_of_persons_name   好。
        5 慎用小写字母l 和大写字母O ，因为它们可能被人错看成数字1 和0
    3.字符串
        1.name.title()：大写每个单词的首字母。  要执行的方法后面要带括号（）
        2.name.upper()：大写所有字母
        3.name.lower()：小写所有字母
        4.f字符串，在字符串中使用变量：full_name = f"{first_name} {last_name}"
            print(f"Hello, {full_name.title()}!")
            
            first_name = "ada"
            last_name = "lovelace"
            full_name = f"{first_name} {last_name}"
            print(full_name)
            起源于py3.6。之前使用：full_name = "{} {}".format(first_name, last_name)
        5.用制表符(\t=tab)或换行符(\n)-添加空白：
        6.删除空白：n.lstrip()、strip()头尾、rstrip()右，暂时删除，永久删除需赋值到变量n=n.rstrip
    4.数
        1.整数相除=浮点数，即使是4/2
        2.下划线可增加可读性，14_000_000_000。始于py3.6
        3.多重赋值，逗号分隔：x, y, z = 0, 0, 0
        4.常量全大写，约定俗成：MAX_CONNECTIONS = 5000
    5.注释
        1.#大家好 快捷键CTRL /
3.列表简介
    1.创建：a=[]框中，元素用逗号隔开：['trek', 'cannondale', 'redline', 'specialized']内含字符串的话需要单引号
    2.a[0]第一个元素，a[-1]倒数第一个元素
        a = ['t', 'ce', 're', 'sp']
        message = f"My first bicycle was a {a[0].title()}."
    3.修改值：a[0]='trekc'
    4.添加值：a.append('ducati')
    5.任意位置添加：a.insert(4, 'ducati')
    6.删除位值：del a[3],  
             print(a)
    7.弹出：b=a.pop(),默认弹出最后元素并使用，a.pop(2) or b=a.pop(2)，弹出第三位。
    8.删除值：a.remove('ducati')   